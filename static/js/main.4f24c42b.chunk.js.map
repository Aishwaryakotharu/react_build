{"version":3,"sources":["useFetchTasks.js","App.js","index.js"],"names":["useFetchTasks","url","config","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","tasks","setTasks","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","res","json","data","Array","isArray","catch","err","console","finally","App","_useFetchTasks","react_default","a","createElement","className","map","task","taskIndex","key","title","JSON","stringify","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"kJAsBeA,EApBO,SAACC,GAAqB,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOG,EAChBC,mBAAS,IADOC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnCK,EADmCH,EAAA,GAC5BI,EAD4BJ,EAAA,GAAAK,EAERN,oBAAS,GAFDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEnCE,EAFmCD,EAAA,GAExBE,EAFwBF,EAAA,GAAAG,EAGhBV,mBAAS,MAHOW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGnCE,EAHmCD,EAAA,GAG5BE,EAH4BF,EAAA,GAiB1C,OAZAG,oBAAU,WACRL,GAAa,GACbM,MAAMrB,EAAKC,GACRqB,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAWC,MAAMC,QAAQF,GAAQd,EAASc,GAAQ,OACvDG,MAAM,SAACC,GACNV,EAASU,GACTC,QAAQZ,MAAMW,KAEfE,QAAQ,kBAAMhB,GAAa,MAC7B,IAEI,CAAEL,QAAOI,YAAWI,UCfd,SAASc,IAAM,IAAAC,EACQlC,EAClC,8CADMW,EADoBuB,EACpBvB,MAAOI,EADamB,EACbnB,UAAWI,EADEe,EACFf,MAI1B,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZvB,EAAYoB,EAAAC,EAAAC,cAAA,oBAAiB,KAC7B1B,EAAM4B,IAAI,SAACC,EAAMC,GAChB,OAAON,EAAAC,EAAAC,cAAA,KAAGK,IAAKD,GAAYD,EAAKG,SAEjCxB,EAAQgB,EAAAC,EAAAC,cAAA,WAAMO,KAAKC,UAAU1B,IAAgB,MCVpD,IAAM2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPf,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,WAAP,KACEhB,EAAAC,EAAAC,cAACJ,EAAD,OAEFa","file":"static/js/main.4f24c42b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetchTasks = (url, config = {}) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(url, config)\r\n      .then((res) => res.json())\r\n      .then((data) => (Array.isArray(data) ? setTasks(data) : null))\r\n      .catch((err) => {\r\n        setError(err);\r\n        console.error(err);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  return { tasks, isLoading, error };\r\n};\r\n\r\nexport default useFetchTasks;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport useFetchTasks from \"./useFetchTasks\";\n\nexport default function App() {\n  const { tasks, isLoading, error } = useFetchTasks(\n    \"https://jsonplaceholder.typicode.com/todos\"\n  );\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <p>Loading</p> : null}\n      {tasks.map((task, taskIndex) => {\n        return <p key={taskIndex}>{task.title}</p>;\n      })}\n      {error ? <pre>{JSON.stringify(error)}</pre> : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}